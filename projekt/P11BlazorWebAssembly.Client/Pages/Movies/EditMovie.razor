@page "/movies/edit/{Id:int}"

@using P06Shop.Shared.Services.MovieService
@using P06Shop.Shared.MovieCollection

@attribute [Authorize]
@inject IMovieService MovieService
@inject NavigationManager NavigationManager

<div class="app-page">
    <h1 class="app-header">Edit Movie</h1>
    @if (movie == null)
    {
        <p><em>@message</em></p>
    }
    else
    {
        <MovieForm movie="movie" OnValidSubmit="HandleValidSubmit"  submitButtonText="Update"></MovieForm>
        <div class="app-content-container">
            <div class="app-buttons-container">
                <div class="app-align-center-stretch">
                    <button class="app-warn-button" @onclick=HandleDelete>Delete</button>
                    <button class="app-secondary-button" @onclick=HandleGoBack>Go back</button>
                </div>
            </div>
        </div>
    }
</div>


@code {
    [Parameter]
    public int Id { get; set; }

    private MovieDto movie;
    private string message = "Loading movie...";

    protected override async Task OnInitializedAsync()
    {
        var response = await MovieService.GetMovieByIdAsync(Id);
        if (response.Success)
            movie = response.Data;
        else
            message = response.Message;
    }

    async Task HandleValidSubmit()
    {
        var response = await MovieService.UpdateMovieAsync(movie);
        if (response.Success)
            NavigationManager.NavigateTo("/movies");
        else
            message = response.Message;
    }

    async Task HandleDelete()
    {
        var response = await MovieService.DeleteMovieAsync(Id);
        if (response.Success)
            NavigationManager.NavigateTo("/movies");
        else
            message = response.Message;
    }

    async Task HandleGoBack()
    {
        NavigationManager.NavigateTo("/movies");
    }
}